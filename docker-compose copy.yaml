version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: taskmanager-frontend
    restart: unless-stopped
    ports:
      - "3100:3000"
    environment:
      - INFISICAL_TOKEN=${INFISICAL_TOKEN_NEXT_FE}
      - NODE_ENV=production
      - NEXTAUTH_URL=https://taskmanager.shadowdragon.dev
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXT_PUBLIC_API_URL=https://api.taskmanager.shadowdragon.dev
      - INTERNAL_API_URL=http://taskmanager-backend:5000
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
    networks:
      - taskmanager-network
      - nginx_proxy_manager_default

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: taskmanager-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - INFISICAL_TOKEN=${INFISICAL_TOKEN_NEXT_FE}
      - NODE_ENV=production
      - PORT=5000
      - MONGODB_URI=${MONGODB_URI}
      - REDIS_URL=${REDIS_URL}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=7d
      - FRONTEND_URL=https://taskmanager.shadowdragon.dev
    depends_on:
      - mongodb
      - redis
    networks:
      - taskmanager-network
      - nginx_proxy_manager_default

  mongodb:
    image: mongo:6
    container_name: taskmanager-mongodb
    restart: unless-stopped
    # Uncomment the next 2 lines temporarily for MongoDB Compass access
    # ports:
    #   - "2109:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_DATABASE}
    volumes:
      - mongodb-data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - taskmanager-network
    command: mongod --auth --bind_ip_all

  redis:
    image: redis:7-alpine
    container_name: taskmanager-redis
    restart: unless-stopped
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - redis-data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - taskmanager-network
    command: redis-server /usr/local/etc/redis/redis.conf --requirepass ${REDIS_PASSWORD}

networks:
  taskmanager-network:
    driver: bridge
  nginx_proxy_manager_default:  # <-- ADD THIS
    external: true

volumes:
  mongodb-data:
  redis-data:
